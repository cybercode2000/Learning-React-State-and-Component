{"ast":null,"code":"var _jsxFileName = \"/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx\";\nimport React, { Component } from \"react\";\n\nclass Hello extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tags: [{\n        id: 1,\n        count: 0\n      }, {\n        id: 2,\n        count: 1\n      }, {\n        id: 3,\n        count: 0\n      }]\n    };\n\n    this.renderTags = () => {};\n\n    this.handleIncrement = id => {\n      const tag = this.state.tags.find(a => id === a.id);\n      const count = tag.count;\n      this.setState({\n        id: tag.id,\n        count: count + 1\n      });\n    };\n\n    this.getBadgeClasses = id => {\n      const tag = this.state.tags.find(a => id === a.id);\n      const count = tag.count;\n      let a = \"badge m-3 badge-\";\n      a += count === 0 ? \"warning\" : \"primary\";\n      return a;\n    };\n\n    this.countFormat = id => {\n      const tag = this.state.tags.find(a => id === a.id);\n      const count = tag.count;\n      return count === 0 ? \"zero\" : count;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, this.state.tags.map(a => /*#__PURE__*/React.createElement(\"div\", {\n      key: a.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: this.getBadgeClasses(a.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, this.countFormat(a.id)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm font-weight-bold btn-success\",\n      style: {\n        fontSize: 20\n      },\n      onClick: this.handleIncrement(a.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        fontSize: 20\n      },\n      className: \"btn btn-sm m-3 font-weight-bold btn-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"-\"))));\n  }\n\n}\n\nexport default Hello;","map":{"version":3,"sources":["/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx"],"names":["React","Component","Hello","state","tags","id","count","renderTags","handleIncrement","tag","find","a","setState","getBadgeClasses","countFormat","render","map","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACNC,MAAAA,IAAI,EAAE,CACJ;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADI,EAEJ;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFI,EAGJ;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHI;AADA,KADoB;;AAAA,SAS5BC,UAT4B,GASf,MAAM,CAAE,CATO;;AAAA,SAuC5BC,eAvC4B,GAuCVH,EAAE,IAAI;AACtB,YAAMI,GAAG,GAAG,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIN,EAAE,KAAKM,CAAC,CAACN,EAAnC,CAAZ;AAEA,YAAMC,KAAK,GAAGG,GAAG,CAACH,KAAlB;AAEA,WAAKM,QAAL,CAAc;AAAEP,QAAAA,EAAE,EAAEI,GAAG,CAACJ,EAAV;AAAcC,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAA7B,OAAd;AACD,KA7C2B;;AAAA,SAqD5BO,eArD4B,GAqDVR,EAAE,IAAI;AACtB,YAAMI,GAAG,GAAG,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIN,EAAE,KAAKM,CAAC,CAACN,EAAnC,CAAZ;AAEA,YAAMC,KAAK,GAAGG,GAAG,CAACH,KAAlB;AACA,UAAIK,CAAC,GAAG,kBAAR;AACAA,MAAAA,CAAC,IAAIL,KAAK,KAAK,CAAV,GAAc,SAAd,GAA0B,SAA/B;AACA,aAAOK,CAAP;AACD,KA5D2B;;AAAA,SA8D5BG,WA9D4B,GA8DdT,EAAE,IAAI;AAClB,YAAMI,GAAG,GAAG,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIN,EAAE,KAAKM,CAAC,CAACN,EAAnC,CAAZ;AAEA,YAAMC,KAAK,GAAGG,GAAG,CAACH,KAAlB;AACA,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD,KAnE2B;AAAA;;AAW5BS,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY,GAAhB,CAAoBL,CAAC,iBACpB;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACN,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAE,KAAKQ,eAAL,CAAqBF,CAAC,CAACN,EAAvB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKS,WAAL,CAAiBH,CAAC,CAACN,EAAnB,CADH,CADF,eAIE;AACE,MAAA,SAAS,EAAC,yCADZ;AAEE,MAAA,KAAK,EAAE;AAAEY,QAAAA,QAAQ,EAAE;AAAZ,OAFT;AAGE,MAAA,OAAO,EAAE,KAAKT,eAAL,CAAqBG,CAAC,CAACN,EAAvB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,eAWE;AACE,MAAA,KAAK,EAAE;AAAEY,QAAAA,QAAQ,EAAE;AAAZ,OADT;AAEE,MAAA,SAAS,EAAC,4CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXF,CADD,CADH,CADF;AAyBD;;AArC2B;;AAsE9B,eAAef,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Hello extends Component {\n  state = {\n    tags: [\n      { id: 1, count: 0 },\n      { id: 2, count: 1 },\n      { id: 3, count: 0 }\n    ]\n  };\n\n  renderTags = () => {};\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.tags.map(a => (\n          <div key={a.id}>\n            <span className={this.getBadgeClasses(a.id)}>\n              {this.countFormat(a.id)}\n            </span>\n            <button\n              className=\"btn btn-sm font-weight-bold btn-success\"\n              style={{ fontSize: 20 }}\n              onClick={this.handleIncrement(a.id)}\n            >\n              +\n            </button>\n            <button\n              style={{ fontSize: 20 }}\n              className=\"btn btn-sm m-3 font-weight-bold\n              btn-danger\"\n            >\n              -\n            </button>\n          </div>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  handleIncrement = id => {\n    const tag = this.state.tags.find(a => id === a.id);\n\n    const count = tag.count;\n\n    this.setState({ id: tag.id, count: count + 1 });\n  };\n\n  // handleDecrement = () => {\n  //   this.state.count <= 0\n  //     ? this.setState({ count: 0 })\n  //     : this.setState({ count: this.state.count - 1 });\n  // };\n\n  getBadgeClasses = id => {\n    const tag = this.state.tags.find(a => id === a.id);\n\n    const count = tag.count;\n    let a = \"badge m-3 badge-\";\n    a += count === 0 ? \"warning\" : \"primary\";\n    return a;\n  };\n\n  countFormat = id => {\n    const tag = this.state.tags.find(a => id === a.id);\n\n    const count = tag.count;\n    return count === 0 ? \"zero\" : count;\n  };\n}\n\nexport default Hello;\n"]},"metadata":{},"sourceType":"module"}