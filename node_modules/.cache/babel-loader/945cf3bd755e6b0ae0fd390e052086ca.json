{"ast":null,"code":"var _jsxFileName = \"/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx\";\nimport React, { Component } from \"react\";\n\nclass Hello extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tags: [{\n        id: 1,\n        count: 0\n      }, {\n        id: 2,\n        count: 1\n      }, {\n        id: 3,\n        count: 0\n      }]\n    };\n\n    this.handleIncrement = id => {\n      const tag = this.state.tags.find(a => id === a.id);\n      const count = tag.count;\n      this.setState({\n        id: tag.id,\n        count: count + 1\n      });\n    };\n\n    this.getBadgeClasses = id => {\n      let a = \"badge m-3 badge-\";\n      a += this.state.count === 0 ? \"warning\" : \"primary\";\n      return a;\n    };\n\n    this.countFormat = () => {\n      const {\n        count\n      } = this.state.count;\n      return count === 0 ? \"zero\" : count;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.StrictMode, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, this.state.tags.map(a => /*#__PURE__*/React.createElement(\"div\", {\n      key: a.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: this.getBadgeClasses(a.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }, this.countFormat), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm font-weight-bold btn-success\",\n      style: {\n        fontSize: 20\n      },\n      onClick: this.handleIncrement(a.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        fontSize: 20\n      },\n      className: \"btn btn-sm m-3 font-weight-bold btn-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, \"-\")))));\n  }\n\n}\n\nexport default Hello;","map":{"version":3,"sources":["/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx"],"names":["React","Component","Hello","state","tags","id","count","handleIncrement","tag","find","a","setState","getBadgeClasses","countFormat","render","map","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACNC,MAAAA,IAAI,EAAE,CACJ;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADI,EAEJ;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFI,EAGJ;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHI;AADA,KADoB;;AAAA,SAwC5BC,eAxC4B,GAwCVF,EAAE,IAAI;AACtB,YAAMG,GAAG,GAAG,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,IAAhB,CAAqBC,CAAC,IAAIL,EAAE,KAAKK,CAAC,CAACL,EAAnC,CAAZ;AAEA,YAAMC,KAAK,GAAGE,GAAG,CAACF,KAAlB;AAEA,WAAKK,QAAL,CAAc;AAAEN,QAAAA,EAAE,EAAEG,GAAG,CAACH,EAAV;AAAcC,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAA7B,OAAd;AACD,KA9C2B;;AAAA,SAsD5BM,eAtD4B,GAsDVP,EAAE,IAAI;AAEtB,UAAIK,CAAC,GAAG,kBAAR;AACAA,MAAAA,CAAC,IAAI,KAAKP,KAAL,CAAWG,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAA1C;AACA,aAAOI,CAAP;AACD,KA3D2B;;AAAA,SA6D5BG,WA7D4B,GA6Dd,MAAM;AAClB,YAAM;AAACP,QAAAA;AAAD,UACJ,KAAKH,KAAL,CAAWG,KADb;AAEA,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD,KAjE2B;AAAA;;AAU5BQ,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWC,IAAX,CAAgBW,GAAhB,CAAoBL,CAAC,iBACpB;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAE,KAAKO,eAAL,CAAqBF,CAAC,CAACL,EAAvB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKQ,WADR,CADF,eAIE;AACE,MAAA,SAAS,EAAC,yCADZ;AAEE,MAAA,KAAK,EAAE;AAAEG,QAAAA,QAAQ,EAAE;AAAZ,OAFT;AAGE,MAAA,OAAO,EAAE,KAAKT,eAAL,CAAqBG,CAAC,CAACL,EAAvB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,eAWE;AACE,MAAA,KAAK,EAAE;AAAEW,QAAAA,QAAQ,EAAE;AAAZ,OADT;AAEE,MAAA,SAAS,EAAC,4CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXF,CADD,CADH,CADF,CADF;AA2BD;;AAtC2B;;AAoE9B,eAAed,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Hello extends Component {\n  state = {\n    tags: [\n      { id: 1, count: 0 },\n      { id: 2, count: 1 },\n      { id: 3, count: 0 }\n    ]\n  };\n\n\n  render() {\n    return (\n      <React.StrictMode>\n        <React.Fragment>\n          {this.state.tags.map(a => (\n            <div key={a.id}>\n              <span className={this.getBadgeClasses(a.id)}>\n                {this.countFormat}\n              </span>\n              <button\n                className=\"btn btn-sm font-weight-bold btn-success\"\n                style={{ fontSize: 20 }}\n                onClick={this.handleIncrement(a.id)}\n              >\n                +\n              </button>\n              <button\n                style={{ fontSize: 20 }}\n                className=\"btn btn-sm m-3 font-weight-bold\n              btn-danger\"\n              >\n                -\n              </button>\n            </div>\n          ))}\n        </React.Fragment>\n      </React.StrictMode>\n    );\n  }\n\n  handleIncrement = id => {\n    const tag = this.state.tags.find(a => id === a.id);\n\n    const count = tag.count;\n\n    this.setState({ id: tag.id, count: count + 1 });\n  };\n\n  // handleDecrement = () => {\n  //   this.state.count <= 0\n  //     ? this.setState({ count: 0 })\n  //     : this.setState({ count: this.state.count - 1 });\n  // };\n\n  getBadgeClasses = id => {\n\n    let a = \"badge m-3 badge-\";\n    a += this.state.count === 0 ? \"warning\" : \"primary\";\n    return a;\n  };\n\n  countFormat = () => {\n    const {count\n  } = this.state.count;\n    return count === 0 ? \"zero\" : count;\n  };\n}\n\nexport default Hello;\n"]},"metadata":{},"sourceType":"module"}