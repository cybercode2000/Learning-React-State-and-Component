{"ast":null,"code":"var _jsxFileName = \"/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx\";\nimport React, { Component } from \"react\";\n\nclass Hello extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tags: [{\n        id: 1,\n        count: 0\n      }, {\n        id: 2,\n        count: 0\n      }, {\n        id: 3,\n        count: 0\n      }]\n    };\n\n    this.renderTags = () => {};\n\n    this.getBadgeClasses = () => {\n      const {\n        count\n      } = this.state;\n      let a = \"badge m-3 badge-\";\n      a += count === 0 ? \"warning\" : \"primary\";\n      return a;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, this.state.tags.map(a => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: () => {\n        this.getBadgeClasses(a.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, this.countFormat()), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.handleIncrement();\n      },\n      className: \"btn btn-sm font-weight-bold btn-success\",\n      style: {\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, \" \", \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"onClick=\", () => {\n      this.handleDecrement();\n    }, \"style=\", {\n      fontSize: 20\n    }, \"className=\\\"btn btn-sm m-3 font-weight-bold btn-danger\\\" >-\"))));\n  } // handleIncrement = () => {\n  //   this.setState({ count: this.state.count + 1 });\n  // };\n  // handleDecrement = () => {\n  //   this.state.count <= 0\n  //     ? this.setState({ count: 0 })\n  //     : this.setState({ count: this.state.count - 1 });\n  // };\n  // countFormat = () => {\n  //   const { count } = this.state;\n  //   return count === 0 ? \"zero\" : count;\n  // };\n\n\n}\n\nexport default Hello;","map":{"version":3,"sources":["/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx"],"names":["React","Component","Hello","state","tags","id","count","renderTags","getBadgeClasses","a","render","map","countFormat","handleIncrement","fontSize","handleDecrement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACNC,MAAAA,IAAI,EAAE,CAAC;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAAD,EAAsB;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAAtB,EAA2C;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAA3C;AADA,KADoB;;AAAA,SAK5BC,UAL4B,GAKf,MAAM,CAAE,CALO;;AAAA,SA+C5BC,eA/C4B,GA+CV,MAAM;AACtB,YAAM;AAAEF,QAAAA;AAAF,UAAY,KAAKH,KAAvB;AACA,UAAIM,CAAC,GAAG,kBAAR;AACAA,MAAAA,CAAC,IAAIH,KAAK,KAAK,CAAV,GAAc,SAAd,GAA0B,SAA/B;AACA,aAAOG,CAAP;AACD,KApD2B;AAAA;;AAO5BC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,GAAhB,CAAoBF,CAAC,iBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAE,MAAM;AAAE,aAAKD,eAAL,CAAqBC,CAAC,CAACJ,EAAvB;AAA4B,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwD,KAAKO,WAAL,EAAxD,CADF,eAEE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKC,eAAL;AACD,OAHH;AAIE,MAAA,SAAS,EAAC,yCAJZ;AAKE,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,GAPH,MAFF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEG,MAAM;AACL,WAAKC,eAAL;AACD,KAJH,YAKS;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KALT,gEAZF,CADD,CADH,CADF;AA2BD,GAnC2B,CAqC5B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;;;AAzD4B;;AA4D9B,eAAeZ,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Hello extends Component {\n  state = {\n    tags: [{ id: 1, count: 0 }, { id: 2, count: 0 }, {id: 3, count: 0 }]\n  };\n\n  renderTags = () => {};\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.tags.map(a => (\n          <div>\n            <span className={() => { this.getBadgeClasses(a.id) }}>{this.countFormat()}</span>\n            <button\n              onClick={() => {\n                this.handleIncrement();\n              }}\n              className=\"btn btn-sm font-weight-bold btn-success\"\n              style={{ fontSize: 20 }}\n            >\n              {\" \"}\n              +\n            </button>\n            <button>\n              onClick=\n              {() => {\n                this.handleDecrement();\n              }}\n              style={{ fontSize: 20 }}className=\"btn btn-sm m-3 font-weight-bold\n              btn-danger\" >-\n            </button>\n          </div>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  // handleIncrement = () => {\n  //   this.setState({ count: this.state.count + 1 });\n  // };\n\n  // handleDecrement = () => {\n  //   this.state.count <= 0\n  //     ? this.setState({ count: 0 })\n  //     : this.setState({ count: this.state.count - 1 });\n  // };\n\n  getBadgeClasses = () => {\n    const { count } = this.state;\n    let a = \"badge m-3 badge-\";\n    a += count === 0 ? \"warning\" : \"primary\";\n    return a;\n  };\n\n  // countFormat = () => {\n  //   const { count } = this.state;\n  //   return count === 0 ? \"zero\" : count;\n  // };\n}\n\nexport default Hello;\n"]},"metadata":{},"sourceType":"module"}