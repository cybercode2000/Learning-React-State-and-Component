{"ast":null,"code":"var _jsxFileName = \"/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx\";\nimport React, { Component } from \"react\";\n\nclass Hello extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tags: [{\n        count: 0\n      }, {\n        count: 0\n      }, {\n        count: 0\n      }]\n    };\n\n    this.renderTags = () => {\n      this.state.tags.map(tag => {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: this.getBadgeClasses(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 11\n          }\n        }, this.countFormat()), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => {\n            this.handleIncrement();\n          },\n          className: \"btn btn-sm font-weight-bold btn-success\",\n          style: {\n            fontSize: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 11\n          }\n        }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => {\n            this.handleDecrement();\n          },\n          style: {\n            fontSize: 20\n          },\n          className: \"btn btn-sm m-3 font-weight-bold btn-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }\n        }, \"-\"));\n      });\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.handleDecrement = () => {\n      this.state.count <= 0 ? this.setState({\n        count: 0\n      }) : this.setState({\n        count: this.state.count - 1\n      });\n    };\n\n    this.getBadgeClasses = () => {\n      const {\n        count\n      } = this.state;\n      let a = \"badge m-3 badge-\";\n      a += count === 0 ? \"warning\" : \"primary\";\n      return a;\n    };\n\n    this.countFormat = () => {\n      const {\n        count\n      } = this.state;\n      return count === 0 ? \"zero\" : count;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default Hello;","map":{"version":3,"sources":["/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx"],"names":["React","Component","Hello","state","tags","count","renderTags","map","tag","getBadgeClasses","countFormat","handleIncrement","fontSize","handleDecrement","setState","a","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACNC,MAAAA,IAAI,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAD,EAAe;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAf,EAA6B;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAA7B;AADA,KADoB;;AAAA,SAK5BC,UAL4B,GAKf,MAAM;AACjB,WAAKH,KAAL,CAAWC,IAAX,CAAgBG,GAAhB,CAAoBC,GAAG,IAAI;AACzB,4BACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAM,UAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0C,KAAKC,WAAL,EAA1C,CADF,eAEE;AACE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKC,eAAL;AACD,WAHH;AAIE,UAAA,SAAS,EAAC,yCAJZ;AAKE,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAWE;AACE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKC,eAAL;AACD,WAHH;AAIE,UAAA,KAAK,EAAE;AAAED,YAAAA,QAAQ,EAAE;AAAZ,WAJT;AAKE,UAAA,SAAS,EAAC,4CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,CADF;AAuBD,OAxBD;AAyBD,KA/B2B;;AAAA,SAuC5BD,eAvC4B,GAuCV,MAAM;AACtB,WAAKG,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB;AAA5B,OAAd;AACD,KAzC2B;;AAAA,SA2C5BQ,eA3C4B,GA2CV,MAAM;AACtB,WAAKV,KAAL,CAAWE,KAAX,IAAoB,CAApB,GACI,KAAKS,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAE;AAAT,OAAd,CADJ,GAEI,KAAKS,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB;AAA5B,OAAd,CAFJ;AAGD,KA/C2B;;AAAA,SAiD5BI,eAjD4B,GAiDV,MAAM;AACtB,YAAM;AAAEJ,QAAAA;AAAF,UAAY,KAAKF,KAAvB;AACA,UAAIY,CAAC,GAAG,kBAAR;AACAA,MAAAA,CAAC,IAAIV,KAAK,KAAK,CAAV,GAAc,SAAd,GAA0B,SAA/B;AACA,aAAOU,CAAP;AACD,KAtD2B;;AAAA,SAwD5BL,WAxD4B,GAwDd,MAAM;AAClB,YAAM;AAAEL,QAAAA;AAAF,UAAY,KAAKF,KAAvB;AACA,aAAOE,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD,KA3D2B;AAAA;;AAiC5BW,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAGD;;AArC2B;;AA8D9B,eAAed,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Hello extends Component {\n  state = {\n    tags: [{ count: 0 }, { count: 0 }, { count: 0 }]\n  };\n\n  renderTags = () => {\n    this.state.tags.map(tag => {\n      return (\n        <React.Fragment>\n          <span className={this.getBadgeClasses()}>{this.countFormat()}</span>\n          <button\n            onClick={() => {\n              this.handleIncrement();\n            }}\n            className=\"btn btn-sm font-weight-bold btn-success\"\n            style={{ fontSize: 20 }}\n          >\n            +\n          </button>\n          <button\n            onClick={() => {\n              this.handleDecrement();\n            }}\n            style={{ fontSize: 20 }}\n            className=\"btn btn-sm m-3 font-weight-bold btn-danger\"\n          >\n            -\n          </button>\n        </React.Fragment>\n      );\n    });\n  };\n\n  render() {\n    return <React.Fragment>\n      \n    </React.Fragment>;\n  }\n\n  handleIncrement = () => {\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  handleDecrement = () => {\n    this.state.count <= 0\n      ? this.setState({ count: 0 })\n      : this.setState({ count: this.state.count - 1 });\n  };\n\n  getBadgeClasses = () => {\n    const { count } = this.state;\n    let a = \"badge m-3 badge-\";\n    a += count === 0 ? \"warning\" : \"primary\";\n    return a;\n  };\n\n  countFormat = () => {\n    const { count } = this.state;\n    return count === 0 ? \"zero\" : count;\n  };\n}\n\nexport default Hello;\n"]},"metadata":{},"sourceType":"module"}