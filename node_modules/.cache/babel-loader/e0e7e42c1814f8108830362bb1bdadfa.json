{"ast":null,"code":"var _jsxFileName = \"/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx\";\nimport React, { Component } from \"react\";\n\nclass Hello extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tags: [{\n        id: 1,\n        count: 0\n      }, {\n        id: 2,\n        count: 0\n      }, {\n        id: 3,\n        count: 0\n      }]\n    };\n\n    this.renderTags = () => {};\n\n    this.getBadgeClasses = id => {\n      const tag = this.state.tags.find(a => id === a.id);\n      const count = tag.count;\n      let a = \"badge m-3 badge-\";\n      a += count === 0 ? \"warning\" : \"primary\";\n      return a;\n    };\n\n    this.countFormat = id => {\n      const tag = this.state.tags.find(a => id === a.id);\n      const count = tag.count;\n      return count === 0 ? \"zero\" : count;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, this.state.tags.map(a => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: () => {\n        this.getBadgeClasses(a.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, () => {\n      this.countFormat();\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm font-weight-bold btn-success\",\n      style: {\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, \" \", \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, \"onClick=\", () => {\n      this.handleDecrement();\n    }, \"style=\", {\n      fontSize: 20\n    }, \"className=\\\"btn btn-sm m-3 font-weight-bold btn-danger\\\" >-\"))));\n  } // handleIncrement = () => {\n  //   this.setState({ count: this.state.count + 1 });\n  // };\n  // handleDecrement = () => {\n  //   this.state.count <= 0\n  //     ? this.setState({ count: 0 })\n  //     : this.setState({ count: this.state.count - 1 });\n  // };\n\n\n}\n\nexport default Hello;","map":{"version":3,"sources":["/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx"],"names":["React","Component","Hello","state","tags","id","count","renderTags","getBadgeClasses","tag","find","a","countFormat","render","map","fontSize","handleDecrement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACNC,MAAAA,IAAI,EAAE,CAAC;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAAD,EAAsB;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAAtB,EAA2C;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAA3C;AADA,KADoB;;AAAA,SAK5BC,UAL4B,GAKf,MAAM,CAAE,CALO;;AAAA,SA6C5BC,eA7C4B,GA6CTH,EAAD,IAAQ;AACxB,YAAMI,GAAG,GAAG,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIN,EAAE,KAAKM,CAAC,CAACN,EAAnC,CAAZ;AAEA,YAAMC,KAAK,GAAGG,GAAG,CAACH,KAAlB;AACA,UAAIK,CAAC,GAAG,kBAAR;AACAA,MAAAA,CAAC,IAAIL,KAAK,KAAK,CAAV,GAAc,SAAd,GAA0B,SAA/B;AACA,aAAOK,CAAP;AACD,KApD2B;;AAAA,SAsD5BC,WAtD4B,GAsDbP,EAAD,IAAQ;AACxB,YAAMI,GAAG,GAAG,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIN,EAAE,KAAKM,CAAC,CAACN,EAAnC,CAAZ;AAEI,YAAMC,KAAK,GAAGG,GAAG,CAACH,KAAlB;AACA,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD,KA3D2B;AAAA;;AAO5BO,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,GAAhB,CAAoBH,CAAC,iBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAE,MAAM;AAAE,aAAKH,eAAL,CAAqBG,CAAC,CAACN,EAAvB;AAA4B,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwD,MAAM;AAAE,WAAKO,WAAL;AAAoB,KAApF,CADF,eAEE;AAEE,MAAA,SAAS,EAAC,yCAFZ;AAGE,MAAA,KAAK,EAAE;AAAEG,QAAAA,QAAQ,EAAE;AAAZ,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,GALH,MAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEG,MAAM;AACL,WAAKC,eAAL;AACD,KAJH,YAKS;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KALT,gEAVF,CADD,CADH,CADF;AAyBD,GAjC2B,CAmC5B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AA3C4B;;AA8D9B,eAAeb,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Hello extends Component {\n  state = {\n    tags: [{ id: 1, count: 0 }, { id: 2, count: 0 }, {id: 3, count: 0 }]\n  };\n\n  renderTags = () => {};\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.tags.map(a => (\n          <div>\n            <span className={() => { this.getBadgeClasses(a.id) }}>{() => { this.countFormat() }}</span>\n            <button\n              \n              className=\"btn btn-sm font-weight-bold btn-success\"\n              style={{ fontSize: 20 }}\n            >\n              {\" \"}\n              +\n            </button>\n            <button>\n              onClick=\n              {() => {\n                this.handleDecrement();\n              }}\n              style={{ fontSize: 20 }}className=\"btn btn-sm m-3 font-weight-bold\n              btn-danger\" >-\n            </button>\n          </div>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  // handleIncrement = () => {\n  //   this.setState({ count: this.state.count + 1 });\n  // };\n\n  // handleDecrement = () => {\n  //   this.state.count <= 0\n  //     ? this.setState({ count: 0 })\n  //     : this.setState({ count: this.state.count - 1 });\n  // };\n\n  getBadgeClasses = (id) => {\n    const tag = this.state.tags.find(a => id === a.id);\n\n    const count = tag.count;\n    let a = \"badge m-3 badge-\";\n    a += count === 0 ? \"warning\" : \"primary\";\n    return a;\n  };\n\n  countFormat = (id) => {\nconst tag = this.state.tags.find(a => id === a.id);\n\n    const count = tag.count;\n    return count === 0 ? \"zero\" : count;\n  };\n}\n\nexport default Hello;\n"]},"metadata":{},"sourceType":"module"}