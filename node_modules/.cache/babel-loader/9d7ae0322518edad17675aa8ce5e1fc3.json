{"ast":null,"code":"var _jsxFileName = \"/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx\";\nimport React, { Component } from \"react\";\n\nclass Hello extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tags: [{\n        id: 1,\n        count: 0\n      }, {\n        id: 2,\n        count: 0\n      }, {\n        id: 3,\n        count: 0\n      }]\n    };\n\n    this.renderTags = () => {};\n\n    this.countFormat = id => {\n      return id.id; // const tag = this.state.tags.find(a => id === a.id);\n      //     const count = tag.count;\n      //     return count === 0 ? \"zero\" : count;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, this.state.tags.map(a => /*#__PURE__*/React.createElement(\"div\", {\n      key: a.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }))));\n  } // handleIncrement = () => {\n  //   this.setState({ count: this.state.count + 1 });\n  // };\n  // handleDecrement = () => {\n  //   this.state.count <= 0\n  //     ? this.setState({ count: 0 })\n  //     : this.setState({ count: this.state.count - 1 });\n  // };\n  // getBadgeClasses = (id) => {\n  //   const tag = this.state.tags.find(a => id === a.id);\n  //   const count = tag.count;\n  //   let a = \"badge m-3 badge-\";\n  //   a += count === 0 ? \"warning\" : \"primary\";\n  //   return a;\n  // };\n\n\n}\n\nexport default Hello;","map":{"version":3,"sources":["/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx"],"names":["React","Component","Hello","state","tags","id","count","renderTags","countFormat","render","map","a"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACNC,MAAAA,IAAI,EAAE,CACJ;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADI,EAEJ;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFI,EAGJ;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHI;AADA,KADoB;;AAAA,SAS5BC,UAT4B,GASf,MAAM,CAAE,CATO;;AAAA,SA0D5BC,WA1D4B,GA0DdH,EAAE,IAAI;AAClB,aAAOA,EAAE,CAACA,EAAV,CADkB,CAElB;AAEA;AACA;AACD,KAhE2B;AAAA;;AAW5BI,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,GAAhB,CAAoBC,CAAC,iBACpB;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACN,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CADF;AAyBD,GArC2B,CAuC5B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAxD4B;;AAmE9B,eAAeH,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Hello extends Component {\n  state = {\n    tags: [\n      { id: 1, count: 0 },\n      { id: 2, count: 0 },\n      { id: 3, count: 0 }\n    ]\n  };\n\n  renderTags = () => {};\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.tags.map(a => (\n          <div key={a.id}>\n            <span>\n              {}\n            </span>\n            {/* <button\n              className=\"btn btn-sm font-weight-bold btn-success\"\n              style={{ fontSize: 20 }}\n            >\n              \n              +\n            </button>\n            <button\n              style={{ fontSize: 20 }}\n              className=\"btn btn-sm m-3 font-weight-bold\n              btn-danger\"\n            >\n              -\n            </button> */}\n          </div>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  // handleIncrement = () => {\n  //   this.setState({ count: this.state.count + 1 });\n  // };\n\n  // handleDecrement = () => {\n  //   this.state.count <= 0\n  //     ? this.setState({ count: 0 })\n  //     : this.setState({ count: this.state.count - 1 });\n  // };\n\n  // getBadgeClasses = (id) => {\n  //   const tag = this.state.tags.find(a => id === a.id);\n\n  //   const count = tag.count;\n  //   let a = \"badge m-3 badge-\";\n  //   a += count === 0 ? \"warning\" : \"primary\";\n  //   return a;\n  // };\n\n  countFormat = id => {\n    return id.id\n    // const tag = this.state.tags.find(a => id === a.id);\n\n    //     const count = tag.count;\n    //     return count === 0 ? \"zero\" : count;\n  };\n}\n\nexport default Hello;\n"]},"metadata":{},"sourceType":"module"}