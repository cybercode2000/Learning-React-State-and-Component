{"ast":null,"code":"var _jsxFileName = \"/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx\";\nimport React, { Component } from \"react\";\n\nclass Hello extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tags: [{\n        count: 0\n      }, {\n        count: 0\n      }, {\n        count: 0\n      }]\n    };\n\n    this.renderTags = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }\n    }, this.state.tags.map(tag => {\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: this.getBadgeClasses(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }\n      }, this.countFormat()), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.handleIncrement();\n        },\n        className: \"btn btn-sm font-weight-bold btn-success\",\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }\n      }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.handleDecrement();\n        },\n        style: {\n          fontSize: 20\n        },\n        className: \"btn btn-sm m-3 font-weight-bold btn-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, \"-\"));\n    }));\n  } // handleIncrement = () => {\n  //   this.setState({ count: this.state.count + 1 });\n  // };\n  // handleDecrement = () => {\n  //   this.state.count <= 0\n  //     ? this.setState({ count: 0 })\n  //     : this.setState({ count: this.state.count - 1 });\n  // };\n  // getBadgeClasses = () => {\n  //   const { count } = this.state;\n  //   let a = \"badge m-3 badge-\";\n  //   a += count === 0 ? \"warning\" : \"primary\";\n  //   return a;\n  // };\n  // countFormat = () => {\n  //   const { count } = this.state;\n  //   return count === 0 ? \"zero\" : count;\n  // };\n\n\n}\n\nexport default Hello;","map":{"version":3,"sources":["/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx"],"names":["React","Component","Hello","state","tags","count","renderTags","render","map","tag","getBadgeClasses","countFormat","handleIncrement","fontSize","handleDecrement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACNC,MAAAA,IAAI,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAD,EAAe;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAf,EAA6B;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAA7B;AADA,KADoB;;AAAA,SAK5BC,UAL4B,GAKf,MAAM,CAElB,CAP2B;AAAA;;AAS5BC,EAAAA,MAAM,GAAG;AACP,wBACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM,KAAKJ,KAAL,CAAWC,IAAX,CAAgBI,GAAhB,CAAoBC,GAAG,IAAI;AACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKC,WAAL,EAA1C,CADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACnB,eAAKC,eAAL;AACD,SAFH;AAGE,QAAA,SAAS,EAAC,yCAHZ;AAIE,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAUE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKC,eAAL;AACD,SAHH;AAIE,QAAA,KAAK,EAAE;AAAED,UAAAA,QAAQ,EAAE;AAAZ,SAJT;AAKE,QAAA,SAAS,EAAC,4CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF;AAuBD,KAxBD,CAFN,CADA;AA8BD,GAxC2B,CA0C5B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AA9D4B;;AAiE9B,eAAeX,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Hello extends Component {\n  state = {\n    tags: [{ count: 0 }, { count: 0 }, { count: 0 }]\n  };\n\n  renderTags = () => {\n    \n  };\n\n  render() {\n    return (\n    <React.Fragment>\n      {\n          this.state.tags.map(tag => {\n            <div>\n              <span className={this.getBadgeClasses()}>{this.countFormat()}</span>\n              <button onClick={() => {\n                  this.handleIncrement();\n                }}\n                className=\"btn btn-sm font-weight-bold btn-success\"\n                style={{ fontSize: 20 }}\n              >\n                +\n            </button>\n              <button\n                onClick={() => {\n                  this.handleDecrement();\n                }}\n                style={{ fontSize: 20 }}\n                className=\"btn btn-sm m-3 font-weight-bold btn-danger\"\n              >\n                -\n            </button>\n            </div>\n          \n        \n        \n          })\n  }\n    </React.Fragment>);\n  }\n\n  // handleIncrement = () => {\n  //   this.setState({ count: this.state.count + 1 });\n  // };\n\n  // handleDecrement = () => {\n  //   this.state.count <= 0\n  //     ? this.setState({ count: 0 })\n  //     : this.setState({ count: this.state.count - 1 });\n  // };\n\n  // getBadgeClasses = () => {\n  //   const { count } = this.state;\n  //   let a = \"badge m-3 badge-\";\n  //   a += count === 0 ? \"warning\" : \"primary\";\n  //   return a;\n  // };\n\n  // countFormat = () => {\n  //   const { count } = this.state;\n  //   return count === 0 ? \"zero\" : count;\n  // };\n}\n\nexport default Hello;\n"]},"metadata":{},"sourceType":"module"}