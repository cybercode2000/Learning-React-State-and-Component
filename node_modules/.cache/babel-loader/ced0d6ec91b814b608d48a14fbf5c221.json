{"ast":null,"code":"var _jsxFileName = \"/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx\";\nimport React, { Component } from \"react\";\n\nclass Hello extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tags: [{\n        id: 1,\n        count: 0\n      }, {\n        id: 2,\n        count: 1\n      }, {\n        id: 3,\n        count: 0\n      }]\n    };\n\n    this.renderTags = () => {};\n\n    this.handleIncrement = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.getBadgeClasses = id => {\n      const tag = this.state.tags.find(a => id === a.id);\n      const count = tag.count;\n      let a = \"badge m-3 badge-\";\n      a += count === 0 ? \"warning\" : \"primary\";\n      return a;\n    };\n\n    this.countFormat = id => {\n      const tag = this.state.tags.find(a => id === a.id);\n      const count = tag.count;\n      return count === 0 ? \"zero\" : count;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, this.state.tags.map(a => /*#__PURE__*/React.createElement(\"div\", {\n      key: a.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: this.getBadgeClasses(a.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, this.countFormat(a.id)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.handleIncrement();\n      },\n      className: \"btn btn-sm font-weight-bold btn-success\",\n      style: {\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        fontSize: 20\n      },\n      className: \"btn btn-sm m-3 font-weight-bold btn-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"-\"))));\n  }\n\n}\n\nexport default Hello;","map":{"version":3,"sources":["/home/cybercode2000/july/learning-react/secondap/src/components/hello.jsx"],"names":["React","Component","Hello","state","tags","id","count","renderTags","handleIncrement","setState","getBadgeClasses","tag","find","a","countFormat","render","map","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACNC,MAAAA,IAAI,EAAE,CACJ;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADI,EAEJ;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFI,EAGJ;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHI;AADA,KADoB;;AAAA,SAS5BC,UAT4B,GASf,MAAM,CAAE,CATO;;AAAA,SAwC5BC,eAxC4B,GAwCV,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAAX,GAAmB;AAA5B,OAAd;AACD,KA1C2B;;AAAA,SAkD5BI,eAlD4B,GAkDTL,EAAD,IAAQ;AACxB,YAAMM,GAAG,GAAG,KAAKR,KAAL,CAAWC,IAAX,CAAgBQ,IAAhB,CAAqBC,CAAC,IAAIR,EAAE,KAAKQ,CAAC,CAACR,EAAnC,CAAZ;AAEA,YAAMC,KAAK,GAAGK,GAAG,CAACL,KAAlB;AACA,UAAIO,CAAC,GAAG,kBAAR;AACAA,MAAAA,CAAC,IAAIP,KAAK,KAAK,CAAV,GAAc,SAAd,GAA0B,SAA/B;AACA,aAAOO,CAAP;AACD,KAzD2B;;AAAA,SA2D5BC,WA3D4B,GA2DbT,EAAD,IAAQ;AAEpB,YAAMM,GAAG,GAAG,KAAKR,KAAL,CAAWC,IAAX,CAAgBQ,IAAhB,CAAqBC,CAAC,IAAIR,EAAE,KAAKQ,CAAC,CAACR,EAAnC,CAAZ;AAEI,YAAMC,KAAK,GAAGK,GAAG,CAACL,KAAlB;AACA,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACL,KAjE2B;AAAA;;AAW5BS,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY,GAAhB,CAAoBH,CAAC,iBACpB;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACR,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAE,KAAKK,eAAL,CAAqBG,CAAC,CAACR,EAAvB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKS,WAAL,CAAiBD,CAAC,CAACR,EAAnB,CAFJ,CADF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKG,eAAL;AAAuB,OAA/C;AACE,MAAA,SAAS,EAAC,yCADZ;AAEE,MAAA,KAAK,EAAE;AAAES,QAAAA,QAAQ,EAAE;AAAZ,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,eAYE;AACE,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OADT;AAEE,MAAA,SAAS,EAAC,4CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAZF,CADD,CADH,CADF;AA0BD;;AAtC2B;;AAoE9B,eAAef,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Hello extends Component {\n  state = {\n    tags: [\n      { id: 1, count: 0 },\n      { id: 2, count: 1 },\n      { id: 3, count: 0 }\n    ]\n  };\n\n  renderTags = () => {};\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.tags.map(a => (\n          <div key={a.id}>\n            <span className={this.getBadgeClasses(a.id)}>\n              {\n                this.countFormat(a.id)}\n            </span>\n            <button onClick={() => {this.handleIncrement()}}\n              className=\"btn btn-sm font-weight-bold btn-success\"\n              style={{ fontSize: 20 }}\n            >\n              \n              +\n            </button>\n            <button\n              style={{ fontSize: 20 }}\n              className=\"btn btn-sm m-3 font-weight-bold\n              btn-danger\"\n            >\n              -\n            </button>\n          </div>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  handleIncrement = () => {\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  // handleDecrement = () => {\n  //   this.state.count <= 0\n  //     ? this.setState({ count: 0 })\n  //     : this.setState({ count: this.state.count - 1 });\n  // };\n\n  getBadgeClasses = (id) => {\n    const tag = this.state.tags.find(a => id === a.id);\n\n    const count = tag.count;\n    let a = \"badge m-3 badge-\";\n    a += count === 0 ? \"warning\" : \"primary\";\n    return a;\n  };\n\n  countFormat = (id) => {\n    \n    const tag = this.state.tags.find(a => id === a.id);\n\n        const count = tag.count;\n        return count === 0 ? \"zero\" : count;\n  };\n}\n\nexport default Hello;\n"]},"metadata":{},"sourceType":"module"}